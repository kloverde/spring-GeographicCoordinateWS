apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

sourceCompatibility = 1.10
targetCompatibility = 1.10

buildscript {
   repositories {
      mavenLocal()
      mavenCentral()
   }

   dependencies {
      classpath( "org.springframework.boot:spring-boot-gradle-plugin:2.3.10.RELEASE" )
   }
}

repositories {
   mavenLocal()
   mavenCentral()
}

test {
   reports {
      junitXml.enabled = true
      html.enabled = true
   }
}

dependencies {
   implementation(
      "org.springframework.boot:spring-boot-starter-web-services:2.0.2.RELEASE",
      "org.springframework.boot:spring-boot-starter-web:2.0.2.RELEASE",
      "wsdl4j:wsdl4j:1.6.1",
      "org.apache.ws.xmlschema:xmlschema-core:2.2.3",
      files( "lib/geographiccoordinate/geographiccoordinate-4.2.jar" ),
      "org.loverde.geographiccoordinate:gcws-client-api-soap:1.0"
   )

   testImplementation(
      "junit:junit:4.12",
      "org.springframework.boot:spring-boot-starter-test:2.0.2.RELEASE",
   )

   runtimeOnly(
      "com.sun.xml.bind:jaxb-core:2.3.0",
      "com.sun.xml.bind:jaxb-impl:2.3.0",
      "javax.activation:activation:1.1.1",
      "javax.xml.soap:javax.xml.soap-api:1.4.0",
      "com.sun.xml.messaging.saaj:saaj-impl:1.4.0",
      "org.apache.ws.xmlschema:xmlschema-core:2.2.3",
      files( "lib/numberutil/numberutil-1.0.jar" )
   )
}

compileJava.dependsOn clean
bootJar.dependsOn test
