apply plugin: "java"
apply plugin: "eclipse"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"

sourceCompatibility = 1.10
targetCompatibility = 1.10

buildscript {
   repositories {
      mavenCentral()
   }

   dependencies {
      classpath( "org.springframework.boot:spring-boot-gradle-plugin:2.0.2.RELEASE" )
   }
}

repositories {
   mavenCentral()
}

task init {
   delete "src/main/java/org/loverde/geographiccoordinate/ws/model/generated"
   delete "bin"
   delete "build"
   delete "gradle"
}

task genJaxb {
   def sourcesDir = "src/main/java"
   def schema = "schema/xsd/GeographicCoordinateWS.xsd"
   def jaxbTargetPkg = "org.loverde.geographiccoordinate.ws.model.generated"

   doLast() {
      project.ant {
         taskdef name: "xjc",
         classname: "com.sun.tools.xjc.XJCTask",
         classpath: configurations.jaxb.asPath

         xjc( fork : true,
              package : "${jaxbTargetPkg}",
              destdir : "${sourcesDir}",
              schema  : "${schema}"
         ) {
            arg( value: "-wsdl" )
            produces( dir: sourcesDir, includes: "**/*.java" )
         }
      }
   }
}

test {
   reports {
      junitXml.enabled = true
      html.enabled = true
   }
}

task afterEclipseImport {
   dependsOn "genJaxb"
}

configurations {
   jaxb
}

bootJar {
   baseName = "geographiccoordinate-ws"
   version =  "0.0.0"
}

dependencies {
   compile(
      "javax.xml.bind:jaxb-api:2.3.0",
      "org.springframework.boot:spring-boot-starter-web-services",
      "wsdl4j:wsdl4j:1.6.1",
      files( "lib/geographiccoordinate/geographiccoordinate-4.0.jar" ),
      //files( genJaxb.classesDir ).builtBy( genJaxb )
   )

   testCompile(
      "junit:junit:4.12",
      //"org.mockito:mockito-core:2.18.3",
      //"org.springframework.boot:spring-boot-starter-test"
   )

   jaxb (
      // Using the JAXB libs with Java 9+ results in a warning about illegal reflective access.  In 2.2.x, this happens
      // with any application that uses JAXB; in 2.3.0, xjc also generates this warning.  Since there's no way to
      // completely escape it, might as well use 2.3.0.  Supposedly a future release will address this.  See here:
      // https://github.com/javaee/jaxb-v2/issues/1197
      // https://stackoverflow.com/questions/50237516/proper-fix-for-java-10-complaining-about-illegal-reflection-access-by-jaxb-impl

      "javax.xml.bind:jaxb-api:2.3.0",
      "com.sun.xml.bind:jaxb-core:2.3.0",
      "com.sun.xml.bind:jaxb-xjc:2.3.0",
      "com.sun.xml.bind:jaxb-impl:2.3.0",
      "javax.activation:activation:1.1.1"
   )

   runtime(
      files( "lib/numberutil/numberutil-1.0.jar" )
   )
}

clean.dependsOn init
compileJava.dependsOn clean, genJaxb
