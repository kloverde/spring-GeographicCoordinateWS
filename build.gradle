apply plugin: "eclipse"   // Run 'gradle eclipse' to rebuild .classpath for other systems
apply plugin: "java"


sourceCompatibility = 1.10
targetCompatibility = 1.10

repositories {
	mavenCentral()
}

sourceSets.main.java.srcDirs "src/main/java"

configurations {
    jaxb
}

dependencies {
   compile (
      "javax.xml.bind:jaxb-api:2.2.7",
      files( "lib/geographiccoordinate/geographiccoordinate-4.0.jar" )
   )

   runtime (
      "com.sun.xml.bind:jaxb-core:2.2.7",
      "com.sun.xml.bind:jaxb-impl:2.2.7",
      "javax.activation:activation:1.1.1",
      files( "lib/geographiccoordinate/geographiccoordinate-4.0.jar" ),
      files( "lib/numberutil/numberutil-1.0.jar" )
   )

   jaxb (
      "com.sun.xml.bind:jaxb-xjc:2.2.7",
      "com.sun.xml.bind:jaxb-impl:2.2.7",
      "javax.activation:activation:1.1"
   )

   testCompile (
      "junit:junit:4.12",
      //"org.mockito:mockito-core:2.18.3"
   )
}

task init {
   delete "src/main/java/org/loverde/geographiccoordinate/ws/model/generated"
   delete "bin"
   delete "build"
   delete "gradle"
}

task jaxb {
   System.setProperty( "javax.xml.accessExternalSchema", "all" )

   def jaxbSourceDir = "schema/xsd"
   def jaxbTargetDir = file( "src/main/java" )
   def jaxbTargetPkg = "org.loverde.geographiccoordinate.ws.model.generated"

   doLast {
      jaxbTargetDir.mkdirs()

      ant.taskdef(
         name: "xjc",
         classname: "com.sun.tools.xjc.XJCTask",
         classpath: configurations.jaxb.asPath
      )

      ant.xjc( destdir: "${jaxbTargetDir}", package: "${jaxbTargetPkg}" ) {
         schema( dir: "${jaxbSourceDir}", includes: "GeographicCoordinateWS.xsd" )
      }
   }
}

compileJava.dependsOn init, jaxb
